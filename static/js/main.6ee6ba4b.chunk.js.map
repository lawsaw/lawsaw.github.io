{"version":3,"sources":["logo.svg","route-pages/Home.js","route-pages/About.js","route-pages/Test.js","modules/clock/Clock.js","modules/clock/Arrows.js","modules/clock/Arrow.js","modules/clock/Point.js","modules/clock/Faces.js","modules/clock/Face.js","modules/dashboard/constants.js","modules/dashboard/redux/reducers/cascade.js","modules/dashboard/redux/actionTypes.js","modules/dashboard/redux/reducers/index.js","modules/dashboard/redux/store.js","modules/dashboard/Dashboard.js","modules/dashboard/Toolbar.js","modules/dashboard/Window.js","modules/dashboard/Grid.js","modules/dashboard/redux/actions.js","modules/dashboard/GridItem.js","modules/dashboard/Separator.js","modules/dashboard/etc.js","modules/todolist/etc.js","modules/todolist/redux/reducers/list.js","modules/todolist/redux/actionTypes.js","modules/todolist/redux/reducers/index.js","modules/todolist/redux/store.js","modules/todolist/TodoList.js","modules/todolist/Grid.js","modules/todolist/redux/actions.js","modules/todolist/Task.js","modules/todolist/Set.js","modules/todolist/Bar.js","modules/todolist/AddModal.js","modules/tetris/redux/reducers/list.js","modules/tetris/redux/actionTypes.js","modules/tetris/redux/reducers/index.js","modules/tetris/redux/store.js","modules/tetris/Tetris.js","modules/tetris/constants.js","modules/tetris/etc.js","modules/tetris/Body.js","modules/tetris/Grid.js","modules/tetris/ResultModal.js","modules/tetris/Multi.js","modules/tetris/Friend.js","modules/tetris/Score.js","modules/tetris/Screen.js","modules/tetris/Bar.js","modules/tetris/Lobby.js","modules/tetris/BodyOnline.js","modules/tetris/Preview.js","route-pages/Clock.js","route-pages/Dashboard.js","route-pages/TodoList.js","route-pages/Tetris.js","helpers/routes.js","helpers/constants.js","components/RouteLink.js","components/MenuMain.js","helpers/theme.js","helpers/palette.js","containers/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","className","src","logo","alt","href","target","rel","About","Test","makeValueCircled","circle","value","makeSecondsCircled","makeMinutesCircled","makeHoursCircled","getTime","time","Date","s","getSeconds","seconds","minutes","getMinutes","hours","getHoursInAnalogFormat","getHours","tempTime","withStyles","theme","clock","position","width","height","borderRadius","backgroundColor","lighten","palette","grey","_ref","classes","_useState","useState","_useState2","Object","slicedToArray","setTime","useEffect","timer","setTimeout","clearTimeout","Box","Faces","Arrows","ArrowSecond","props","esm_extends","Arrow","assign","ArrowMinute","_ref2","ArrowHour","_ref3","arrows","left","right","top","bottom","center","border","concat","darken","margin","zIndex","_ref4","Point","Arrows_ArrowHour","deg","Arrows_ArrowMinute","Arrows_ArrowSecond","arrow","borderBottom","transformOrigin","transform","point","display","flexDirection","alignItems","justifyContent","children","faces","objectWithoutProperties","Array","from","length","step","index","Face","key","pos","face","content","content_num","fontSize","content_stick","valueContent","isMainValue","cx","INIT_DATA","idCurrent","type","grid","cascade","state","arguments","undefined","action","cloneState","objectSpread","_action$payload","payload","current","currentContent","data","currentElement","element","splice","React","createRef","F","getDefaultSize","refresh","_action$payload2","idParent","idGrandParent","defaultDeleteF","filter","item","map","lastItem","find","targetItem","targetItemIndex","findIndex","_cloneState$idGrandPa","id","dataToBeAddedIntoTargetItem","apply","toConsumableArray","_action$payload3","combineReducers","createStore","rootReducer","dashboard","es","store","dashboard_Grid","toolbar","addSection","deleteSection","_React$useState","_React$useState2","anchorEl","setAnchorEl","open","Boolean","createNewWin","callback","nType","IconButton","onClick","event","currentTarget","MoreVert_default","Menu","onClose","keepMounted","MenuItem","window","padding","Grid","propData","storeData","storeType","storeContent","update","tempDataSize","realSize","start","finish","onMouseUpEvent","onMouseMoveEvent","idChild","add","del","updateData","distance","getUpdatedData","size","handleOnMouseDown","e","clientDirection","getSeparatorOptions","getRealSize","handleOnMouseUp","handleOnMouseMove","document","addEventListener","removeEventListener","_F$getItemSizeAccordi","getItemSizeAccordingToType","style","gridItem","styleSeparator","separator","GridItem","isLast","optionsSeparator","connect","dispatch","gridItemId","transition","_ref$item","IS_GRID_INSIDE","react","ref","Toolbar","Window","Separator","options","cursor","&:hover","onMouseDown","generateId","Math","random","toString","substring","etc","sizeDefault","space","max","delta","currentLimit","cloneData","cloneDeepWith","isValidElement","_cloneData$id","sizePrev","spacePrev","_cloneData","sizeNext","spaceNext","widthPrev","heightPrev","widthNext","heightNext","abs","prev","next","_prev$getBoundingClie","getBoundingClientRect","_next$getBoundingClie","todolist_etc","initialState","title","description","isDone","list","task","field","clone","console","log","status","todoList","todolist_Grid","Title","Typography","component","variant","Section","Grid_Grid","section","Grid_Title","header","Set","done","Body","container","spacing","justify","wrap","bord","Grid_Section","listToDo","listDone","wrapHeader","wrapBody","flexGrow","body","marginBottom","flexBasis","direction","todolist_Bar","total","todo","Grid_Body","setDoneStatus","FormItem","label","isEditable","toggleEditMode","onBlur","onChange","typographyProps","TextField","autoFocus","onDoubleClick","card","maxWidth","media","isTitleEdit","setIsTitleEdit","_useState3","_useState4","isDescriptionEdit","setIsDescriptionEdit","saveData","updateValue","Card","CardContent","Task_FormItem","gutterBottom","color","CardActions","Button","empty","Task","Paper","Badges","bar","marginLeft","addModal","setAddModal","AppBar","Toolbar_Toolbar","Fab","aria-label","Add_default","Badge","badgeContent","AddModal","isOpen","setTitle","setDescription","Dialog","DialogTitle","DialogContent","fullWidth","DialogActions","Tetris","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onGameModeChange","gameMode","setState","build","maxSnack","anchorOrigin","vertical","horizontal","tetris_Bar","wrapWork","tetris_Body","tetris_Multi","PureComponent","flexShrink","ROWS_HIDDEN","ROWS","COLS","SPEED","SPEED_STEP","SPEED_RAISE_FOR_SCORE","POSITION","ROTATION_CIRCLE","FIGURES","T","up","down","Z","S","Q","J","L","I","generateGrid","hor","ver","merge","figure","rowPosition","colPosition","table","cloneDeep","row","rowIndex","forEach","figureRow","figureRowIndex","_table","replacementItem","replacementIndex","col","renderDemoHouse","smile","setOnlineCallbacks","_this$props","handleStartNewGameCallback","handlePauseCallback","handleContinueCallback","handleEndGameCallback","isActioned","handleStartNewGame","handlePause","handleContinue","handleEndGame","getRandomFigure","figures","keys","ceil","getRandomRotation","rotation","startGame","speed","setInterval","moveFigure","resetSpeed","clearInterval","getNextRotationPosition","indexOf","getPrevRotationPosition","isFigureCloseToLeft","isFigureCloseToRight","_this$state","getFigureOutsideSpace","_this$state2","getFigureRotatePosition","_this$state$position","figureOutsideSpace","rotateFigure","getRotationFunc","getMoveStep","hasFigureRightToRotate","moveDirection","rowNew","colNew","onGameOnline","positionCurrent","hasFigureRightToMove","isEndGame","handleLastStepDown","handleResultModalOpen","isGameRunning","handleEndGameOnline","isResultModalOpen","handleResultModalClose","onBackToLobby","figureNext","rotationNext","score","isPause","handleStartNewGameOnline","_this$state3","tableWithFigure","fullRows","getAllFullRowsIndexes","scoreNew","speedNew","cleanTableFromFullRows","getScoreOptimalSpeed","i","enqueueSnackbar","user","opponent","nickname","autoHideDuration","cleanRow","newTable","rowToClean","rowToCleanIndex","arr","slice","getFigureFullGrid","_this$state4","rows","cols","figureSquare","getFigureMap","handleKeyPress","code","_this$state5","hasTablesConflict","table1","table2","tableRow","tableRowIndex","tableCol","tableColIndex","_this$state6","isPositionInArea","figureMap","reduce","push","rowLimit","colLimit","handlePauseOnline","handleContinueOnline","prevProps","prevState","snapshot","_this2","_this$props2","_this$state7","tetris_Screen","tetris_Preview","tetris_Score","List","ListItem","tetris_ResultModal","withSnackbar","memoTable","nextProps","nextState","nextContext","isEqual","isPreview","preview","hidden","colIndex","square","Component","flexWrap","opacity","ResultModal","renderResultSingle","Table","TableHead","TableRow","TableCell","handleBack","renderResultOnline","_this$props2$user","_this$props2$user$opp","opponentScore","opponentNickname","align","TableBody","_this$props3","SOCKET_TO","EMIT_PLAYER_UPDATE","EMIT_HOST_FIND","EMIT_GAME","EMIT_LEAVE_SESSION","Multi","func","handleNicknameChange","handleUpdatePlayer","handleConnectionTypeChange","connectionType","handleFindHost","host","socket","emit","params","handleGameOnline","handleBackToLobby","isLobby","isFinish","socketIOClient","on","messageType","message","other","tetris_Lobby","onHostFind","onConnectionTypeChange","onNicknameChange","tetris_BodyOnline","DEMO_TABLE","DEMO_PREVIEW","Friend","Score","Screen","screen","screenInner","tetris_Grid","Bar","disabled","STEPS","Lobby","activeStep","handleFriendIdChange","handleBackStep","handleNextStep","renderStep","RadioGroup","name","FormControlLabel","control","Radio","labelPlacement","textFindHost","setFilledValue","Stepper","orientation","stepper","Step","StepLabel","StepContent","button","listOfClients","listOfClientsItem","&:not(:first-child)","borderTop","loader","BodyOnline","_user$opponent","xs","tetris_Friend","Preview","COL_SIZE","route_pages_Clock","Clock","route_pages_Dashboard","Dashboard","route_pages_TodoList","TodoList","route_pages_Tetris","tetris_Tetris","ROUTES","link","page","RouteLink","to","react_router","path","exact","match","Link","StyledButton","root","&$disabled","MenuMain","createMuiTheme","red","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","contrastDefaultColor","gold","blue","green","mainContainer","mainGrid","sidebar","work","MuiThemeProvider","CssBaseline","react_router_dom","Container","App","Main","location","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ee6ba4b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport '../App.css';\nimport logo from \"../logo.svg\";\n\nexport default () => {\n  return (\n      <div className=\"App\">\n          <header className=\"App-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <p>\n                  Edit <code>src/App.js</code> and save to reload.\n              </p>\n              <a\n                  className=\"App-link\"\n                  href=\"https://reactjs.org\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n              >\n                  Learn React\n              </a>\n          </header>\n      </div>\n  );\n}\n","import React from 'react';\nimport '../App.css';\n\nexport default () => {\n  return (\n      <div className=\"App\">\n          <header className=\"App-header\">\n              About\n          </header>\n      </div>\n  );\n}\n","import React from 'react';\n\nexport default () => {\n  return (\n      <div className=\"App\">\n          <header className=\"App-header\">\n              Test\n          </header>\n      </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\nimport { Arrows, Faces } from './';\n\nconst styles = (theme) => ({\n    clock: {\n        position: 'relative',\n        width: 300,\n        height: 300,\n        borderRadius: '100%',\n        backgroundColor: lighten(theme.palette.grey[500], 0.5),\n    },\n});\n\nconst getHoursInAnalogFormat = hours => hours > 12 ? hours - 12 : hours;\n\nconst makeValueCircled = () => {\n    let circle = 0;\n    return value => {\n        if(value === 0) circle += 360;\n        value = circle + value;\n        return value;\n    }\n};\n\nlet makeSecondsCircled = makeValueCircled();\nlet makeMinutesCircled = makeValueCircled();\nlet makeHoursCircled = makeValueCircled();\n\nconst getTime = () => {\n    let time = new Date();\n    let s = time.getSeconds();\n    let m = time.getMinutes();\n    let h = time.getHours();\n    let seconds = s * 6;\n    let minutes = m * 6 + s/60;\n    let hours = getHoursInAnalogFormat(h) * 30 + minutes/12;\n    seconds = makeSecondsCircled(seconds);\n    minutes = makeMinutesCircled(minutes);\n    hours = makeHoursCircled(hours);\n    //console.log(seconds, minutes, hours);\n    return {seconds, minutes, hours}\n};\n\nlet tempTime = getTime();\n\nexport default withStyles(styles)(({ classes }) => {\n\n    const [time, setTime] = useState(tempTime || getTime());\n\n    useEffect(() => {\n        let timer = setTimeout(() => {\n            tempTime = getTime();\n            setTime(tempTime);\n        }, 1000);\n        return () => {\n            clearTimeout(timer);\n            tempTime = null;\n        }\n    }, [time]);\n\n    return (\n        <Box\n            className={classes.clock}\n        >\n            <Faces />\n            <Arrows time={time} />\n        </Box>\n    );\n});","import React from 'react';\nimport { withStyles } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport { lighten, darken } from '@material-ui/core/styles/colorManipulator';\nimport {Arrow, Point} from './';\n\nconst styles = theme => ({\n    arrows: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n    },\n    center: {\n        border: `1px solid ${darken(theme.palette.grey[300], 0.1)}`,\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.grey[800], 0.8),\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        margin: 'auto',\n        zIndex: 1,\n        borderRadius: '100%',\n    },\n});\n\nconst ArrowSecond = ({ ...props }) => {\n    return (\n        <Arrow\n            width={140}\n            height={5}\n            {...props}\n        />\n    )\n};\n\nconst ArrowMinute = ({ ...props }) => {\n    return (\n        <Arrow\n            width={120}\n            height={8}\n            {...props}\n        />\n    )\n};\n\nconst ArrowHour = ({ ...props }) => {\n    return (\n        <Arrow\n            width={100}\n            height={12}\n            {...props}\n        />\n    )\n};\n\nexport default withStyles(styles)(({ classes, time }) => {\n    let { seconds, minutes, hours } = time;\n    return (\n        <Box\n            className={classes.arrows}\n        >\n            <Box\n                className={classes.center}\n            />\n            <Point>\n                <ArrowHour deg={hours} />\n            </Point>\n            <Point>\n                <ArrowMinute deg={minutes} />\n            </Point>\n            <Point>\n                <ArrowSecond deg={seconds} />\n            </Point>\n        </Box>\n    );\n});","import React from 'react';\nimport { withStyles } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport { lighten, darken } from '@material-ui/core/styles/colorManipulator';\n\nconst styles = (theme) => ({\n    arrow: {\n        position: 'relative',\n        backgroundColor: lighten(theme.palette.grey[800], 0.8),\n        borderBottom: `1px solid ${darken(theme.palette.grey[300], 0.1)}`,\n        width: props => (props.width || 140),\n        height: props => (props.height || 10),\n        transformOrigin: 'left center',\n        left: '50%',\n        transform: props => `rotateZ(${props.deg}deg)`,\n        //transition: 'all 0.1s linear 0s',\n    }\n});\n\nexport default withStyles(styles)(({ classes }) => {\n    return (\n        <Box\n            className={classes.arrow}\n        />\n    );\n});","import React from 'react';\nimport { withStyles } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\n\nconst styles = () => ({\n    point: {\n        position: 'absolute',\n        width: 20,\n        height: 20,\n        transformOrigin: 'center center',\n        top: '50%',\n        left: '50%',\n        transform: 'translate3d(-50%, -50%, 0) rotateZ(-90deg)',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n        borderRadius: '100%',\n    }\n});\n\nexport default withStyles(styles)(({ classes, children }) => {\n    return (\n        <Box\n            className={classes.point}\n        >\n            {children}\n        </Box>\n    );\n});","import React from 'react';\nimport { withStyles } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport { Face } from \"./\";\n\nconst styles = () => ({\n    faces: {\n        position: 'absolute',\n        width: 'calc(70% + 5px)',\n        height: 'calc(70% + 5px)',\n        margin: 'auto',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n    },\n});\n\nexport default withStyles(styles)(({ classes, ...props }) => {\n\n    return (\n        <Box\n            className={classes.faces}\n        >\n            {\n                Array.from({length: 60}, (step, index) => {\n                    let deg = (index + 1) * 6;\n                    return (\n                        <Face\n                            key={index}\n                            pos={deg}\n                            value={index + 1}\n                            {...props}\n                        />\n                    );\n                })\n            }\n        </Box>\n    );\n});","import React from 'react';\nimport { withStyles } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport cx from 'classnames';\n\nconst styles = () => ({\n    face: {\n        position: 'absolute',\n        transform: props => `rotateZ(${props.pos + 45}deg)`,\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        transformOrigin: 'center center',\n    },\n    content: {\n        position: 'relative',\n        display: 'block',\n        transformOrigin: 'bottom center',\n        transform: 'translateX(-50%) rotateZ(-45deg)',\n    },\n    content_num: {\n        fontSize: 12,\n        backgroundColor: '#000',\n        width: 3,\n        left: 15,\n        height: 15,\n    },\n    content_stick: {\n        backgroundColor: 'grey',\n        width: 3,\n        left: 6,\n        height: 6,\n    },\n    value: {\n        fontSize: 16,\n        position: 'absolute',\n        transformOrigin: 'center center',\n        transform: 'translateX(-50%) translateY(calc(-100% - 5px))',\n    },\n    valueContent: {\n        position: 'relative',\n        transformOrigin: 'center center',\n        transform: props => `rotateZ(${-props.pos}deg)`,\n    }\n});\n\nexport default withStyles(styles)(({ classes, value }) => {\n\n    let isMainValue = value % 5 === 0;\n\n    return (\n        <Box\n            className={classes.face}\n        >\n            <Box\n                className={cx(classes.content, isMainValue ? classes.content_num : classes.content_stick)}\n            >\n                {\n                    isMainValue && (\n                        <Box\n                            className={classes.value}\n                        >\n                            <Box\n                                className={classes.valueContent}\n                            >\n                                {value/5}\n                            </Box>\n                        </Box>\n                    )\n                }\n            </Box>\n        </Box>\n    );\n});","export const LIMIT_ABSOLUTE = 0;\nexport const LIMIT_RELATIVE = 50;\nexport const DEFAULT_CONTENT = 'DEFAULT_CONTENT';\nexport const INIT_DATA = {\n    idCurrent: 'root',\n    type: 'col',\n    grid: [\n        {\n            content: 'Some Content',\n        },\n        {\n            content: 54855,\n        },\n        {\n            type: 'row',\n            grid: [\n                {\n                    content: 34,\n                },\n                {\n                    type: 'col',\n                    grid: [\n                        {\n                            type: 'row',\n                            grid: [\n                                {\n                                    content: '11',\n                                },\n                                {\n                                    content: '22',\n                                },\n                                {\n                                    content: '33',\n                                },\n                                {\n                                    content: '44',\n                                }\n                            ]\n                        },\n                        {\n                            content: 2,\n                        }\n                    ]\n                },\n                {\n                    content: 24,\n                },\n            ]\n        },\n        {\n            content: 4112,\n        },\n    ]\n};\n","import React from \"react\";\nimport { UPDATE, ADD, DELETE } from \"../actionTypes\";\nimport { F } from '../../';\nimport { DEFAULT_CONTENT } from '../../constants';\n\nconst cascade = (state = {}, action) => {\n    let cloneState = {...state};\n    switch (action.type) {\n        case ADD: {\n            const { idCurrent, index, type } = action.payload;\n            let current = cloneState[idCurrent];\n            if(type === current.type) {\n                let currentContent = current.data[index].content;\n                let currentElement = current.data[index].element;\n                current.data.splice(index, 0, {\n                    content: 'DEFAULT',\n                    element: React.createRef()\n                });\n                current.data[index+1].content = currentContent;\n                current.data[index+1].element = currentElement;\n                current.data = F.getDefaultSize(idCurrent, current.data);\n            } else {\n                let currentContent = current.data[index].content;\n                let grid = [\n                    {\n                        content: DEFAULT_CONTENT,\n                        element: React.createRef(),\n                    },\n                    {\n                        content: currentContent,\n                        element: React.createRef(),\n                    },\n                ];\n                delete current.data[index].content;\n                current.data[index].grid = grid;\n                current.data[index].type = type;\n                current.data = F.refresh(current.data);\n            }\n            return cloneState;\n        }\n        case DELETE: {\n            const { idCurrent, idParent, idGrandParent } = action.payload;\n            let { length } = cloneState[idParent].data;\n            const defaultDeleteF = () => {\n                cloneState[idParent].data = F.getDefaultSize(\n                        idParent,\n                        cloneState[idParent].data.filter(item => item.idCurrent !== idCurrent\n                    )\n                );\n                if(idGrandParent) {\n                    if(cloneState[idGrandParent].data[0].grid) {\n                        cloneState[idGrandParent].data[0].grid = cloneState[idParent].data.map(item => ({ content: item.content }))\n                    }\n                }\n            };\n            if(length > 2) {\n                defaultDeleteF();\n            } else if (length === 2) {\n                let lastItem = cloneState[idParent].data.find(item => item.idCurrent !== idCurrent);\n                if(idGrandParent && cloneState[idGrandParent]) {\n                    let targetItem = cloneState[idGrandParent].data.find(item => item.idCurrent === idParent);\n                    let targetItemIndex = cloneState[idGrandParent].data.findIndex(item => (item.idCurrent === idParent));\n                    if(lastItem.grid && !lastItem.content) {\n                        let id = lastItem.idCurrent;\n                        let dataRoot = cloneState[id].data;\n                        let dataToBeAddedIntoTargetItem = dataRoot.map(item => ({\n                            content: item.content,\n                            grid: item.grid\n                        }));\n                        cloneState[idGrandParent].data.splice(targetItemIndex, 1, ...dataToBeAddedIntoTargetItem);\n                        cloneState[idGrandParent].data = F.getDefaultSize(idGrandParent, cloneState[idGrandParent].data);\n                        delete cloneState[id];\n                    } else {\n                        delete targetItem.grid;\n                        targetItem.content = lastItem.content;\n                    }\n                    delete cloneState[idParent];\n                } else {\n                    defaultDeleteF();\n                }\n            }\n            return cloneState;\n        }\n        case UPDATE: {\n            const { data, type, idCurrent, idParent } = action.payload;\n            cloneState[idCurrent] = {\n                type,\n                data,\n                idParent\n            };\n            return cloneState;\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default cascade;\n","export const UPDATE = \"UPDATE\";\nexport const ADD = \"ADD\";\nexport const DELETE = \"DELETE\";","import { combineReducers } from \"redux\";\nimport cascade from \"./cascade\";\n\nexport default combineReducers({ cascade });","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);","import React from 'react';\nimport Box from \"@material-ui/core/Box\";\nimport { withStyles } from '@material-ui/core';\nimport { Provider } from 'react-redux';\nimport { lighten } from \"@material-ui/core/styles\";\nimport store from \"./redux/store\";\nimport { Grid } from './';\nimport { INIT_DATA } from \"./constants\";\n\nconst styles = (theme) => ({\n    dashboard: {\n        position: 'absolute',\n        left: 10,\n        right: 10,\n        top: 10 + 16,\n        bottom: 10,\n        backgroundColor: lighten(theme.palette.grey[500], 0.8),\n    },\n});\n\nexport default withStyles(styles)(({ classes }) => {\n\n    return (\n        <Provider store={store}>\n            <Box\n                className={classes.dashboard}\n            >\n                <Grid {...INIT_DATA} />\n            </Box>\n        </Provider>\n    );\n\n});","import React from 'react';\nimport { withStyles } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst styles = () => ({\n    toolbar: {\n        position: 'relative',\n        zIndex: 1,\n    },\n});\n\nexport default withStyles(styles)(({ classes, index, idCurrent, addSection, deleteSection }) => {\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n\n    function handleClick(event) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handleClose() {\n        setAnchorEl(null);\n    }\n\n    function createNewWin(callback, nType) {\n        callback(index, idCurrent, nType);\n        setAnchorEl(null);\n    }\n\n    function deleteWin(callback) {\n        callback(index, idCurrent);\n        setAnchorEl(null);\n    }\n\n    return (\n        <Box\n            className={classes.toolbar}\n        >\n            <IconButton\n                onClick={handleClick}\n            >\n                <MoreVertIcon />\n            </IconButton>\n            <Menu\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                keepMounted\n            >\n                <MenuItem onClick={() => createNewWin(addSection, 'col')}>\n                    Col\n                </MenuItem>\n                <MenuItem onClick={() => createNewWin(addSection, 'row')}>\n                    Row\n                </MenuItem>\n                <MenuItem onClick={() => deleteWin(deleteSection)}>\n                    Delete\n                </MenuItem>\n            </Menu>\n        </Box>\n    );\n});","import React from 'react';\nimport { withStyles } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\n\nconst styles = () => ({\n    window: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0,\n        top: 0,\n        padding: 35,\n    },\n});\n\nexport default withStyles(styles)(({ classes, children }) => {\n\n    return (\n        <Box\n            className={classes.window}\n        >\n            {children}\n        </Box>\n    );\n});","import React, { useEffect } from 'react';\nimport { withStyles } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport { GridItem, F } from './';\nimport { connect } from \"react-redux\";\nimport { update, add, del } from \"./redux/actions\";\n\nconst styles = () => ({\n    grid: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0,\n        top: 0,\n    },\n});\n\nconst Grid = withStyles(styles)(({\n     propData,\n     classes,\n     grid,\n     idCurrent,\n     idParent,\n     storeData,\n     storeType,\n     storeContent,\n     type,\n     ...props\n }) => {\n\n    useEffect(() => {\n        props.update({\n            data: storeData || F.getDefaultSize(idCurrent, storeData || grid),\n            type: storeType || type,\n            idCurrent,\n            idParent,\n        });\n    }, []);\n\n    function update(data) {\n        props.update({\n            data,\n            type: storeType,\n            idCurrent,\n            idParent,\n        });\n    }\n\n    let tempDataSize = null;\n    let realSize = {};\n    let start = 0;\n    let finish = 0;\n    let onMouseUpEvent = null;\n    let onMouseMoveEvent = null;\n\n    function addSection(index, idChild, type) {\n        props.add({\n            idCurrent,\n            idChild,\n            index,\n            idParent,\n            type,\n        });\n    }\n\n    function deleteSection(index, id) {\n        props.del({\n            index,\n            idCurrent: id,\n            idParent: idCurrent,\n            idGrandParent: idParent,\n        })\n    }\n\n    function updateData(index, distance) {\n        let data = F.getUpdatedData(index, storeType, distance, storeData, realSize);\n        if(tempDataSize !== data[index].size) {\n            tempDataSize = data[index].size;\n            update(data);\n        }\n    }\n\n    function handleOnMouseDown(e, index) {\n        let { clientDirection } = F.getSeparatorOptions(storeType);\n        start = e[clientDirection];\n        realSize = F.getRealSize(index, storeData);\n        onMouseUpEvent = e => handleOnMouseUp(e);\n        onMouseMoveEvent = e => handleOnMouseMove(e, index);\n        document.addEventListener('mouseup', onMouseUpEvent, false);\n        document.addEventListener('mousemove', onMouseMoveEvent, false);\n    }\n\n    function handleOnMouseMove(e, index) {\n        let { clientDirection } = F.getSeparatorOptions(storeType);\n        finish = e[clientDirection];\n        let distance = finish - start;\n        updateData(index, distance);\n    }\n\n    function handleOnMouseUp(e) {\n        let { clientDirection } = F.getSeparatorOptions(storeType);\n        finish = e[clientDirection];\n        document.removeEventListener('mouseup', onMouseUpEvent, false);\n        document.removeEventListener('mousemove', onMouseMoveEvent, false);\n    }\n\n    function returnContent(data) {\n        return data.map((item, index) => {\n            let { gridItem: style, separator: styleSeparator } = F.getItemSizeAccordingToType(item, storeType);\n            return (\n                <GridItem\n                    key={item.idCurrent}\n                    index={index}\n                    item={item}\n                    idParent={data[0].idParent}\n                    isLast={data[index+1]}\n                    style={style}\n                    styleSeparator={styleSeparator}\n                    addSection={addSection}\n                    deleteSection={deleteSection}\n                    optionsSeparator={F.getSeparatorOptions(storeType)}\n                    handleOnMouseDown={handleOnMouseDown}\n                />\n            )\n        })\n    }\n\n    return (\n        <Box\n            className={classes.grid}\n        >\n            {\n                storeData ? returnContent(storeData) : 'No Data LoL'\n            }\n        </Box>\n    );\n});\n\nexport default connect(\n    (store, props) => {\n        return {\n            storeData: store.cascade[props.idCurrent] && store.cascade[props.idCurrent].data,\n            storeType: store.cascade[props.idCurrent] && store.cascade[props.idCurrent].type,\n            storeContent: store.cascade[props.idCurrent] && store.cascade[props.idCurrent].content,\n        }\n    },\n    dispatch => {\n        return {\n            update: props => dispatch(update(props)),\n            add: props => dispatch(add(props)),\n            del: props => dispatch(del(props)),\n        }\n    },\n    null,\n)(Grid);","import { UPDATE, ADD, DELETE } from \"./actionTypes\";\n\nexport const update = ({data, type, idCurrent, idParent, gridItemId}) => ({\n    type: UPDATE,\n    payload: { data, type, idCurrent, idParent, gridItemId }\n});\n\nexport const add = ({idCurrent, idChild, index, idParent, type}) => ({\n    type: ADD,\n    payload: { idCurrent, idChild, index, idParent, type }\n});\n\nexport const del = ({index, idCurrent, idParent, idGrandParent}) => ({\n    type: DELETE,\n    payload: { index, idCurrent, idParent, idGrandParent }\n});\n","import React, { Fragment } from 'react';\nimport { withStyles } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport { Grid, Toolbar, Window, Separator } from './';\n\nconst styles = () => ({\n    gridItem: {\n        position: 'absolute',\n        width:  props => `${props.style.width}`  || 'auto',\n        left:   props => `${props.style.left}`   || 'auto',\n        height: props => `${props.style.height}` || 'auto',\n        top:    props => `${props.style.top}`    || 'auto',\n        right:  props => `${props.style.right}`  || 'auto',\n        bottom: props => `${props.style.bottom}` || 'auto',\n        transition: 'all 0.3s ease 0s',\n    },\n});\n\nexport default withStyles(styles)(({\n        classes,\n        index,\n        item: { idCurrent, content, element, grid, type },\n        idParent,\n        isLast,\n        styleSeparator,\n        handleOnMouseDown,\n        optionsSeparator,\n        addSection,\n        deleteSection\n    }) => {\n\n    const IS_GRID_INSIDE = Boolean(grid && grid.length);\n\n    return (\n        <Fragment>\n            <Box\n                className={classes.gridItem}\n                ref={element}\n            >\n                {\n                    !IS_GRID_INSIDE && (\n                        <Fragment>\n\n                            <Toolbar\n                                index={index}\n                                idCurrent={idCurrent}\n                                addSection={addSection}\n                                deleteSection={deleteSection}\n                            />\n\n                        </Fragment>\n                    )\n                }\n                <Window>\n                    {\n                        IS_GRID_INSIDE ? (\n                            <Grid\n                                idCurrent={idCurrent}\n                                idParent={idParent}\n                                grid={grid}\n                                type={type}\n                            />\n                        ) : content ? content : 'No LoL'\n                    }\n                </Window>\n            </Box>\n            {\n                isLast && (\n                    <Separator\n                        index={index}\n                        style={styleSeparator}\n                        options={optionsSeparator}\n                        handleOnMouseDown={handleOnMouseDown}\n                    />\n                )\n            }\n        </Fragment>\n    );\n});","import React from 'react';\nimport { withStyles } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\n\nconst styles = () => ({\n    separator: {\n        position: 'absolute',\n        width:      props => `${props.style.width}`  || 'auto',\n        left:       props => `${props.style.left}`   || 'auto',\n        height:     props => `${props.style.height}` || 'auto',\n        top:        props => `${props.style.top}`    || 'auto',\n        right:      props => `${props.style.right}`  || 'auto',\n        bottom:     props => `${props.style.bottom}` || 'auto',\n        transform:  props => `translate3d(${-props.style.width/2 || 0}px, ${-props.style.height/2 || 0}px, 0)`,\n        backgroundColor: 'lightgreen',\n        zIndex: 5,\n        cursor: props => props.options.cursor,\n        '&:hover': {\n            backgroundColor: 'lightblue',\n            zIndex: 6,\n        },\n    },\n});\n\nexport default withStyles(styles)(({ classes, index, handleOnMouseDown }) => {\n\n    return (\n        <Box\n            className={classes.separator}\n            onMouseDown={e => handleOnMouseDown(e, index)}\n        />\n    );\n\n});","import React, { isValidElement } from \"react\";\nimport { cloneDeepWith } from \"lodash\";\nimport { LIMIT_ABSOLUTE, LIMIT_RELATIVE } from './constants';\n\nconst generateId = () => Math.random().toString(36).substring(2, 4) + Math.random().toString(36).substring(2, 4);\n\nconst refresh = (data) => data.map(({ ...props }) => ({...props}));\n\nconst getDefaultSize = (id, data) => {\n    let sizeDefault = 100 / data.length;\n    return data.map(({ idCurrent, element, size, space, idParent, ...props }, index) => {\n        return {\n            ...props,\n            idCurrent: idCurrent || `${id}_${generateId()}`,\n            size: sizeDefault,\n            space: sizeDefault * index,\n            element: element || React.createRef(),\n            idParent: idParent || id,\n        }\n    });\n};\n\nconst getUpdatedData = (id, type, distance, data, realSize) => {\n    let cloneData = cloneDeepWith(data, value => {if(value && isValidElement(value)) return value});\n    let { size: sizePrev, space:spacePrev } = cloneData[id];\n    let { size: sizeNext, space:spaceNext } = cloneData[id+1];\n    let { widthPrev, heightPrev, widthNext, heightNext } = realSize;\n    let max, size, delta, currentLimit, value = Math.abs(distance);\n    if(distance < 0) {\n        max = type === 'col' ? widthPrev : heightPrev;\n        value = max - value < LIMIT_RELATIVE ? max - LIMIT_RELATIVE : value;\n        delta = value * sizePrev / max;\n        currentLimit = sizePrev - LIMIT_ABSOLUTE;\n        delta = delta > currentLimit ? currentLimit : delta;\n        size = sizePrev - delta;\n        cloneData[id].size = size;\n        cloneData[id+1].size = sizeNext + delta;\n        cloneData[id+1].space = spacePrev + size;\n    } else {\n        max = type === 'col' ? widthNext : heightNext;\n        value = max - value < LIMIT_RELATIVE ? max - LIMIT_RELATIVE : value;\n        delta = value * sizeNext / max;\n        currentLimit = sizeNext - LIMIT_ABSOLUTE;\n        delta = delta > currentLimit ? currentLimit : delta;\n        size = sizePrev + delta;\n        cloneData[id].size = size;\n        cloneData[id+1].size = sizeNext - delta;\n        cloneData[id+1].space = spaceNext + delta;\n    }\n    return cloneData;\n};\n\nconst getRealSize = (index, data) => {\n    let prev = data[index].element.current;\n    let next = data[index+1].element.current;\n    let { width: widthPrev, height:heightPrev } = prev.getBoundingClientRect();\n    let { width: widthNext, height:heightNext } = next.getBoundingClientRect();\n    return { widthPrev, heightPrev, widthNext, heightNext };\n};\n\nconst getSeparatorOptions = (type) => type === 'col' ? {\n        clientDirection: 'clientX',\n        cursor: 'col-resize',\n    } : {\n        clientDirection: 'clientY',\n        cursor: 'row-resize',\n    };\n\nconst getItemSizeAccordingToType = ({size, space}, type) => type === 'col' ? {\n        gridItem: {\n            width: `${size}%`,\n            height: 'auto',\n            left: `${space}%`,\n            right: 'auto',\n            top: 0,\n            bottom: 0,\n        },\n        separator: {\n            width: '10px',\n            height: 'auto',\n            left: `${size + space}%`,\n            right: 'auto',\n            top: 0,\n            bottom: 0,\n        },\n    } : {\n        gridItem: {\n            width: 'auto',\n            height: `${size}%`,\n            left: 0,\n            right: 0,\n            top: `${space}%`,\n            bottom: 'auto',\n        },\n        separator: {\n            width: 'auto',\n            height: '10px',\n            left: 0,\n            right: 0,\n            top: `${size + space}%`,\n            bottom: 'auto',\n        },\n    };\n\n\nexport default {\n    getDefaultSize,\n    generateId,\n    refresh,\n    getUpdatedData,\n    getRealSize,\n    getSeparatorOptions,\n    getItemSizeAccordingToType,\n};","const generateId = () => Math.random().toString(36).substring(2, 4) + Math.random().toString(36).substring(2, 4);\n\nexport default {\n    generateId\n};","//import React from \"react\";\nimport { UPDATE, ADD, DELETE, DONE } from \"../actionTypes\";\nimport F from '../../etc';\n\nlet initialState = [\n    {\n        id: 'fdsfasdf',\n        title: 'Make this',\n        description: 'Do it right now',\n        isDone: false,\n    },{\n        id: 'fdsf688afsd',\n        title: 'Make this 2',\n        description: 'Do it right now 2',\n        isDone: true,\n    }\n]\n\nconst list = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD: {\n            let { title, description } = action.payload;\n            let task = {\n                id: F.generateId(),\n                title,\n                description,\n                isDone: false,\n            };\n            let clone = [...state, task];\n            return clone;\n        }\n        case DELETE: {\n            let { id } = action.payload;\n            let clone = state.filter(task => task.id !== id);\n            return clone;\n        }\n        case UPDATE: {\n            let { id, field, value } = action.payload;\n            let clone = [...state];\n            let task = clone.find(item => item.id === id);\n            task[field] = value;\n            console.log(id, field, value);\n            return clone;\n        }\n        case DONE: {\n            let { id, status } = action.payload;\n            let clone = [...state];\n            let task = clone.find(item => item.id === id);\n            task.isDone = status;\n            return clone;\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default list;\n","export const UPDATE = \"UPDATE\";\nexport const ADD = \"ADD\";\nexport const DELETE = \"DELETE\";\nexport const DONE = \"DONE\";","import { combineReducers } from \"redux\";\nimport list from \"./list\";\n\nexport default combineReducers({ list });","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);","import React from 'react';\nimport Box from \"@material-ui/core/Box\";\nimport { withStyles } from '@material-ui/core';\nimport { Provider } from 'react-redux';\nimport store from \"./redux/store\";\nimport { Grid } from './';\n\nconst styles = () => ({\n    todoList: {\n        position: 'absolute',\n        left: 0,\n        top: 15,\n        right: 0,\n        bottom: 0,\n        backgroundColor: '#f5f5f5',\n        padding: 10,\n    },\n});\n\nexport default withStyles(styles)(({ classes }) => {\n\n    return (\n        <Provider store={store}>\n            <Box\n                className={classes.todoList}\n            >\n                <Grid />\n            </Box>\n        </Provider>\n    );\n\n});","import React from 'react';\nimport { withStyles } from '@material-ui/core';\nimport GridMaterial from '@material-ui/core/Grid';\nimport { connect } from \"react-redux\";\nimport Typography from '@material-ui/core/Typography';\n\nimport { Set, Bar } from './';\nimport {add, del, update, done} from \"./redux/actions\";\n\nconst styles = (theme) => ({\n    wrap: {\n        margin: 0,\n        height: '100%',\n    },\n    wrapHeader: {\n        //padding: 0,\n    },\n    wrapBody: {\n        //padding: 0,\n        flexGrow: 1,\n    },\n    header: {},\n    body: {},\n    bord: {\n        position: 'relative',\n        width: '100%',\n        height: '100%',\n        margin: 0,\n    },\n    title: {\n        marginBottom: 15,\n    },\n    section: {\n        position: 'relative',\n        flexBasis: '50%',\n    },\n});\n\nconst Title = (props) => {\n    return (\n        <Typography\n            component='h3'\n            variant='h3'\n            className={props.className}\n        >\n            {props.children}\n        </Typography>\n    )\n};\n\nconst Section = ({classes, ...props}) => {\n    return (\n        <GridMaterial\n            item\n            className={classes.section}\n        >\n            <Title\n                className={classes.title}\n            >\n                {props.header}\n            </Title>\n            <Set\n                data={props.data}\n                update={props.update}\n                done={props.done}\n                del={props.del}\n            />\n        </GridMaterial>\n    )\n};\n\nconst Body = ({classes, ...props}) => {\n    return (\n        <GridMaterial\n            container\n            spacing={2}\n            justify=\"space-between\"\n            wrap=\"nowrap\"\n            className={classes.bord}\n        >\n            <Section\n                header=\"In process\"\n                data={props.listToDo}\n                classes={classes}\n                {...props}\n            />\n            <Section\n                header=\"Done\"\n                data={props.listDone}\n                classes={classes}\n                {...props}\n            />\n        </GridMaterial>\n    )\n};\n\nconst Grid =  withStyles(styles)(({ classes, list, ...props }) => {\n    let listToDo = list.filter(task => task.isDone !== true);\n    let listDone = list.filter(task => task.isDone === true);\n    return (\n        <GridMaterial\n            container\n            spacing={2}\n            direction=\"column\"\n            justify=\"flex-start\"\n            wrap=\"nowrap\"\n            className={classes.wrap}\n        >\n            <GridMaterial\n                item\n                className={classes.wrapHeader}\n            >\n                <Bar\n                    total={list.length}\n                    todo={listToDo.length}\n                    done={listDone.length}\n                    add={props.add}\n                />\n            </GridMaterial>\n            <GridMaterial\n                item\n                className={classes.wrapBody}\n            >\n                <Body\n                    classes={classes}\n                    listToDo={listToDo}\n                    listDone={listDone}\n                    update={props.update}\n                    done={props.setDoneStatus}\n                    del={props.del}\n                />\n            </GridMaterial>\n\n        </GridMaterial>\n    );\n});\n\nexport default connect(\n    (store, props) => {\n        return {\n            list: store.list,\n        }\n    },\n    dispatch => {\n        return {\n            update: props => dispatch(update(props)),\n            add: props => dispatch(add(props)),\n            del: props => dispatch(del(props)),\n            setDoneStatus: props => dispatch(done(props)),\n        }\n    },\n    null,\n)(Grid);","import { UPDATE, ADD, DELETE, DONE } from \"./actionTypes\";\n\nexport const update = ({ id, field, value }) => ({\n    type: UPDATE,\n    payload: { id, field, value }\n});\n\nexport const done = ({ id, status }) => ({\n    type: DONE,\n    payload: { id, status }\n});\n\nexport const add = ({ title, description }) => ({\n    type: ADD,\n    payload: { title, description }\n});\n\nexport const del = ({ id }) => ({\n    type: DELETE,\n    payload: { id }\n});\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = () => ({\n    card: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 140,\n    },\n});\n\nconst FormItem = ({value, label, isEditable, toggleEditMode, onBlur, onChange, typographyProps}) => {\n    return !isEditable ? (\n        <Typography\n            {...typographyProps}\n            onDoubleClick={toggleEditMode}\n        >\n            {value}\n        </Typography>\n    ) : (\n        <TextField\n            label={label}\n            value={value}\n            onChange={onChange}\n            margin=\"normal\"\n            variant=\"outlined\"\n            onBlur={onBlur}\n            autoFocus={true}\n        />\n    )\n};\n\nexport default withStyles(styles)(({ classes, id, title, description, isDone, update, done, del, ...props }) => {\n\n    const [isTitleEdit, setIsTitleEdit] = useState(false);\n    const [isDescriptionEdit, setIsDescriptionEdit] = useState(false);\n\n    function toggleTitleEditMode() {\n        setIsTitleEdit(!isTitleEdit);\n    }\n\n    function toggleDescriptionEditMode() {\n        setIsDescriptionEdit(!isDescriptionEdit);\n    }\n\n    function saveData() {\n        setIsTitleEdit(false);\n        setIsDescriptionEdit(false);\n        console.log('save');\n    }\n\n    function updateValue(field) {\n       return function(e) {\n           if(e.target && e.target.value) {\n               let { value } = e.target;\n               update({\n                   id,\n                   field,\n                   value,\n               });\n           }\n       }\n    }\n\n    function handleDone() {\n        done({id, status: !isDone})\n    }\n\n    function handleDelete() {\n        del({id})\n    }\n\n    return (\n        <Card className={classes.card}>\n            <CardContent>\n\n                <FormItem\n                    value={title}\n                    label=\"Title\"\n                    isEditable={isTitleEdit}\n                    toggleEditMode={toggleTitleEditMode}\n                    onBlur={saveData}\n                    onChange={updateValue('title')}\n                    typographyProps={{\n                        gutterBottom: true,\n                        variant: 'h5',\n                        component: 'p'\n                    }}\n                />\n\n                <FormItem\n                    value={description}\n                    label=\"Description\"\n                    isEditable={isDescriptionEdit}\n                    toggleEditMode={toggleDescriptionEditMode}\n                    onBlur={saveData}\n                    onChange={updateValue('description')}\n                    typographyProps={{\n                        variant: 'body2',\n                        color: 'textSecondary',\n                        component: 'p'\n                    }}\n                />\n\n            </CardContent>\n            <CardActions>\n                <Button size=\"small\" color=\"primary\" onClick={handleDone}>\n                    {isDone ? 'UnDone' : 'Done'}\n                </Button>\n                <Button size=\"small\" color=\"primary\" onClick={handleDelete}>\n                    Delete\n                </Button>\n            </CardActions>\n        </Card>\n    );\n\n});","import React from 'react';\nimport GridMaterial from '@material-ui/core/Grid';\nimport { Task } from './';\nimport { withStyles } from \"@material-ui/core\";\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = () => ({\n    grid: {\n        position: 'relative',\n    },\n    empty: {\n        padding: 10,\n        width: '100%',\n    },\n});\n\nexport default withStyles(styles)(({ classes, data, update, done, del }) => {\n    return (\n        <GridMaterial\n            container\n            spacing={2}\n            className={classes.grid}\n        >\n            {\n                data && data.length ? data.map(({id, isDone, title, description}) => {\n                    return(\n                        <GridMaterial\n                            key={id}\n                            item\n                        >\n                            <Task\n                                isDone={isDone}\n                                id={id}\n                                title={title}\n                                description={description}\n                                update={update}\n                                done={done}\n                                del={del}\n                            />\n                        </GridMaterial>\n                    )\n                }) : (\n                    <Paper className={classes.empty}>\n                        <Typography component=\"p\">\n                            There is no data\n                        </Typography>\n                    </Paper>\n                )\n            }\n        </GridMaterial>\n    );\n});","import React, { Fragment, useState } from 'react';\nimport cx from 'classnames';\nimport { AddModal } from './';\nimport { withStyles } from \"@material-ui/core\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from \"@material-ui/core/Typography\";\nimport Badge from '@material-ui/core/Badge';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\n\nconst styles = () => ({\n    bar: {\n        position: 'relative',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    margin: {\n        marginLeft: 20,\n    },\n});\n\nconst Badges = [\n    {\n        label: 'Total',\n        value: 'total',\n    },{\n        label: 'In process',\n        value: 'todo',\n    },{\n        label: 'Done',\n        value: 'done',\n    }\n];\n\nexport default withStyles(styles)(({ classes, ...props }) => {\n\n    const [addModal, setAddModal] = useState(false);\n\n    function handleOpenAddModal() {\n        setAddModal(true);\n    }\n\n    function handleCloseAddModal() {\n        setAddModal(false);\n    }\n\n    return (\n        <Fragment>\n            <AppBar position=\"static\" className={classes.bar}>\n                <Toolbar>\n                    <Fab size=\"medium\" color=\"secondary\" aria-label=\"add\" onClick={handleOpenAddModal}>\n                        <AddIcon />\n                    </Fab>\n                    <Typography variant=\"h6\" className={cx(classes.title, classes.margin)}>\n                        To do list\n                    </Typography>\n                    {\n                        Badges.map(({label, value}, index) => (\n                            <Badge\n                                key={index}\n                                className={classes.margin}\n                                badgeContent={`${props[value]}`}\n                                color=\"secondary\"\n                            >\n                                {label}\n                            </Badge>\n                        ))\n                    }\n                </Toolbar>\n            </AppBar>\n            <AddModal\n                isOpen={addModal}\n                onClose={handleCloseAddModal}\n                add={props.add}\n            />\n        </Fragment>\n    );\n});","import React, { useState } from 'react';\nimport { withStyles } from \"@material-ui/core\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst styles = () => ({\n\n});\n\nexport default withStyles(styles)(({ classes, isOpen, onClose, add }) => {\n\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n\n    function handleChangeTitle(e) {\n        let { value } = e.target;\n        setTitle(value);\n    }\n\n    function handleChangeDescription(e) {\n        let { value } = e.target;\n        setDescription(value);\n    }\n\n    function handleAdd() {\n        add({title, description});\n        setTitle('');\n        setDescription('');\n        onClose();\n    }\n\n    return (\n        <Dialog onClose={onClose} open={isOpen}>\n            <DialogTitle id=\"simple-dialog-title\">Adding new task</DialogTitle>\n            <DialogContent>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    label=\"Title\"\n                    fullWidth\n                    value={title}\n                    onChange={handleChangeTitle}\n                />\n            </DialogContent>\n            <DialogContent>\n                <TextField\n                    margin=\"dense\"\n                    label=\"Description\"\n                    fullWidth\n                    value={description}\n                    onChange={handleChangeDescription}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button color=\"primary\" onClick={handleAdd}>\n                    Add\n                </Button>\n                <Button  color=\"primary\" onClick={onClose}>\n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n\n});","//import React from \"react\";\nimport { UPDATE, ADD, DELETE, DONE } from \"../actionTypes\";\n\nlet initialState = [\n    {\n        id: 'fdsfasdf',\n        title: 'Make this',\n        description: 'Do it right now',\n        isDone: false,\n    },{\n        id: 'fdsf688afsd',\n        title: 'Make this 2',\n        description: 'Do it right now 2',\n        isDone: true,\n    }\n]\n\nconst list = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD: {\n\n            return state;\n        }\n        case DELETE: {\n\n            return state;\n        }\n        case UPDATE: {\n            return state;\n        }\n        case DONE: {\n            return state;\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default list;\n","export const UPDATE = \"UPDATE\";\nexport const ADD = \"ADD\";\nexport const DELETE = \"DELETE\";\nexport const DONE = \"DONE\";","import { combineReducers } from \"redux\";\nimport list from \"./list\";\n\nexport default combineReducers({ list });","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);","import React, { PureComponent } from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { Provider } from 'react-redux';\nimport store from \"./redux/store\";\nimport { withStyles } from '@material-ui/core';\nimport GridMaterial from '@material-ui/core/Grid';\nimport { Body, Multi, Bar } from './';\n\nconst styles = () => ({\n    wrap: {\n        height: '100%',\n    },\n    wrapHeader: {\n        flexShrink: 0,\n    },\n    wrapWork: {\n        flexGrow: 1,\n    },\n});\n\nclass Tetris extends PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            gameMode: 'multi',\n        }\n    }\n\n    onGameModeChange = (gameMode) => {\n        this.setState(() => ({\n            gameMode,\n        }))\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { gameMode } = this.state;\n        return (\n            <Provider store={store}>\n                <SnackbarProvider maxSnack={3} anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}>\n                    <GridMaterial\n                        container\n                        direction=\"column\"\n                        className={classes.wrap}\n                    >\n                        <GridMaterial\n                            item\n                            className={classes.wrapHeader}\n                        >\n                            <Bar\n                                gameMode={gameMode}\n                                onGameModeChange={this.onGameModeChange}\n                            />\n                        </GridMaterial>\n                        <GridMaterial\n                            item\n                            container\n                            justify=\"center\"\n                            alignItems=\"center\"\n                            className={classes.wrapWork}\n                        >\n                            {\n                                gameMode === 'single' ? (\n                                    <Body />\n                                ) : (\n                                    <Multi />\n                                )\n                            }\n                        </GridMaterial>\n                    </GridMaterial>\n                </SnackbarProvider>\n            </Provider>\n        );\n    }\n\n};\n\n\nexport default withStyles(styles)(Tetris);","//export const SOCKET_SERVER = 'http://localhost:3005/';\nexport const SOCKET_SERVER = 'https://lawsaw-tetris-server.herokuapp.com/';\nexport const COL_SIZE = 26;\nexport const ROWS_HIDDEN = 4;\nexport const ROWS = 20+ROWS_HIDDEN;\nexport const COLS = 10;\nexport const SPEED = 500;\nexport const SPEED_STEP = 10;\nexport const SPEED_RAISE_FOR_SCORE = 2;\nexport const POSITION = [0, COLS/2-1];\nexport const ROTATION_CIRCLE = ['up', 'right', 'down', 'left'];\nexport const FIGURES = {\n    'T': {\n        'up': [\n            [0,1,0],\n            [1,1,1],\n        ],\n        'down': [\n            [1,1,1],\n            [0,1,0],\n        ],\n        'left': [\n            [0,1],\n            [1,1],\n            [0,1],\n        ],\n        'right': [\n            [1,0],\n            [1,1],\n            [1,0],\n        ],\n    },\n    'Z': {\n        'up': [\n            [0,1],\n            [1,1],\n            [1,0],\n        ],\n        'down': [\n            [0,1],\n            [1,1],\n            [1,0],\n        ],\n        'left': [\n            [1,1,0],\n            [0,1,1],\n        ],\n        'right': [\n            [1,1,0],\n            [0,1,1],\n        ],\n    },\n    'S': {\n        'up': [\n            [1,0],\n            [1,1],\n            [0,1],\n        ],\n        'down': [\n            [1,0],\n            [1,1],\n            [0,1],\n        ],\n        'left': [\n            [0,1,1],\n            [1,1,0],\n        ],\n        'right': [\n            [0,1,1],\n            [1,1,0],\n        ],\n    },\n    'Q': {\n        'up': [\n            [1,1],\n            [1,1],\n        ],\n        'down': [\n            [1,1],\n            [1,1],\n        ],\n        'left': [\n            [1,1],\n            [1,1],\n        ],\n        'right': [\n            [1,1],\n            [1,1],\n        ],\n    },\n    'J': {\n        'up': [\n            [1,1],\n            [1,0],\n            [1,0],\n        ],\n        'down': [\n            [0,1],\n            [0,1],\n            [1,1],\n        ],\n        'left': [\n            [1,0,0],\n            [1,1,1],\n        ],\n        'right': [\n            [1,1,1],\n            [0,0,1],\n        ],\n    },\n    'L': {\n        'up': [\n            [1,1],\n            [0,1],\n            [0,1],\n        ],\n        'down': [\n            [1,0],\n            [1,0],\n            [1,1],\n        ],\n        'left': [\n            [1,1,1],\n            [1,0,0],\n        ],\n        'right': [\n            [0,0,1],\n            [1,1,1],\n        ],\n    },\n    'I': {\n        'up': [\n            [1],\n            [1],\n            [1],\n            [1],\n        ],\n        'down': [\n            [1],\n            [1],\n            [1],\n            [1],\n        ],\n        'left': [\n            [1,1,1,1],\n        ],\n        'right': [\n            [1,1,1,1],\n        ],\n    }\n};","import { cloneDeep } from \"lodash\";\n\nexport function generateGrid(hor, ver) {\n    return Array.from({length: ver}, () => Array.from({length: hor}, () => 0));\n}\n\nexport function merge(figure, grid, [rowPosition, colPosition]) {\n    let table = cloneDeep(grid);\n    return table.map((row, rowIndex) => {\n        if(rowIndex === rowPosition) {\n            figure.forEach((figureRow, figureRowIndex) => {\n                let replacement = table[rowIndex + figureRowIndex].splice(colPosition, figureRow.length, ...figureRow);\n                replacement.forEach((replacementItem, replacementIndex) => {\n                    if(replacementItem !== 0) {\n                        let tableRowTarget = rowIndex + figureRowIndex;\n                        table[tableRowTarget][colPosition+replacementIndex] = 1;\n                    }\n                })\n            });\n        }\n        return row.map(col => col);\n    });\n}\n\nexport function renderDemoHouse(table) {\n    // let houseHuy = [\n    //     [0,0,0,0,1,1,0,0,0,0],\n    //     [0,0,0,1,1,1,1,0,0,0],\n    //     [0,0,0,1,1,1,1,0,0,0],\n    //     [0,0,0,0,1,1,0,0,0,0],\n    //     [0,0,0,0,1,1,0,0,0,0],\n    //     [0,0,0,0,1,1,0,0,0,0],\n    //     [0,0,0,0,1,1,0,0,0,0],\n    //     [0,0,0,0,1,1,0,0,0,0],\n    //     [0,0,0,0,1,1,0,0,0,0],\n    //     [0,0,1,1,1,1,1,1,0,0],\n    //     [0,0,1,1,1,1,1,1,0,0],\n    //     [0,0,1,1,1,1,1,1,0,0],\n    // ];\n    let smile = [\n        [0,0,1,0,0,0,0,1,0,0],\n        [0,1,1,1,0,0,1,1,1,0],\n        [0,0,1,0,0,0,0,1,0,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,1,0,0,0,0,1,0,0],\n        [0,0,0,1,0,0,1,0,0,0],\n        [0,0,0,0,1,1,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0],\n    ];\n    let newGrid = merge(smile, table, [table.length-smile.length, 0]);\n    return newGrid;\n}","import React, { Fragment, PureComponent } from 'react';\nimport { cloneDeep } from 'lodash';\nimport { withSnackbar } from 'notistack';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport GridMaterial from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core';\nimport { ResultModal, Score, Screen, Preview } from './';\nimport { FIGURES, ROTATION_CIRCLE, ROWS, COLS, POSITION, ROWS_HIDDEN, SPEED, SPEED_STEP, SPEED_RAISE_FOR_SCORE } from './constants';\nimport { generateGrid, merge, renderDemoHouse } from './etc';\n\nconst styles = () => ({\n\n});\n\nclass Body extends PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.timer = null;\n        this.state = {\n            table: renderDemoHouse(generateGrid(COLS, ROWS)),\n            rotation: this.getRandomRotation(),\n            rotationNext: this.getRandomRotation(),\n            figure: this.getRandomFigure(),\n            figureNext: this.getRandomFigure(),\n            position: POSITION,\n            speed: SPEED,\n            score: 0,\n            isPause: true,\n            isGameRunning: false,\n            isResultModalOpen: false,\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyPress);\n        if(this.props.onGameOnline) {\n            this.setOnlineCallbacks();\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyPress);\n    }\n\n    setOnlineCallbacks = () => {\n        const { handleStartNewGameCallback, handlePauseCallback, handleContinueCallback, handleEndGameCallback } = this.props;\n        handleStartNewGameCallback(isActioned => this.handleStartNewGame(isActioned));\n        handlePauseCallback(isActioned => this.handlePause(isActioned));\n        handleContinueCallback(isActioned => this.handleContinue(isActioned));\n        handleEndGameCallback(isActioned => this.handleEndGame(isActioned));\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props.onGameOnline) {\n            if(this.props.user.speed && (this.props.user.speed < this.state.speed)) {\n                this.setState(() => ({\n                    speed: this.props.user.speed,\n                }));\n                this.props.enqueueSnackbar(`${this.props.user.opponent.nickname} has increased your speed. It's now ${this.props.user.speed}ms!`, {\n                    variant: 'info',\n                    autoHideDuration: 1500,\n                });\n            }\n        }\n    }\n\n    getRandomFigure = () => {\n        let figures = Object.keys(FIGURES);\n        let figure = Math.ceil(Math.random() * (figures.length-1));\n        return FIGURES[figures[figure]];\n    }\n\n    getRandomRotation = () => {\n        let rotation = Math.ceil(Math.random() * (ROTATION_CIRCLE.length-1));\n        return ROTATION_CIRCLE[rotation];\n    }\n\n    startGame = () => {\n        const { speed } = this.state;\n        this.timer = setInterval(() => {\n            this.moveFigure('down');\n        }, speed);\n    }\n\n    resetSpeed = () => {\n        clearInterval(this.timer);\n        this.startGame();\n    }\n\n    getNextRotationPosition = (figure) => {\n        let { length } = ROTATION_CIRCLE;\n        let index = ROTATION_CIRCLE.indexOf(figure);\n        return index === length-1 ? ROTATION_CIRCLE[0] : ROTATION_CIRCLE[index+1];\n    }\n\n    getPrevRotationPosition = (figure) => {\n        let { length } = ROTATION_CIRCLE;\n        let index = ROTATION_CIRCLE.indexOf(figure);\n        return index === 0 ? ROTATION_CIRCLE[length-1] : ROTATION_CIRCLE[index-1];\n    }\n\n    isFigureCloseToLeft = () => {\n        let colPosition = this.state.position[1];\n        return colPosition-1 >= 0;\n    }\n\n    isFigureCloseToRight = (rotation) => {\n        const { position, table, figure } = this.state;\n        let colPosition = position[1];\n        return colPosition < (table[0].length - figure[rotation][0].length);\n    }\n\n    getFigureOutsideSpace = (rotation) => {\n        const { position, table, figure } = this.state;\n        const colPosition = position[1];\n        let tableRowLength = table[0].length;\n        let currentFigureLength = figure[rotation][0].length;\n        return tableRowLength - (colPosition + currentFigureLength);\n    }\n\n    getFigureRotatePosition = (rotation) => {\n        const { position: [rowPosition, colPosition]} = this.state;\n        let figureOutsideSpace = this.getFigureOutsideSpace(rotation);\n        return figureOutsideSpace < 0 ? [rowPosition, colPosition+figureOutsideSpace] : [rowPosition, colPosition];\n    }\n\n    rotateFigure = (getRotationFunc) => {\n        const { rotation: rotationCurrent } = this.state;\n        let rotation = getRotationFunc(rotationCurrent);\n        let position = this.getMoveStep(null, this.getFigureRotatePosition(rotation));\n        if(this.hasFigureRightToRotate(rotation, position)) {\n            this.setState(() => ({\n                position,\n                rotation\n            }));\n        }\n    }\n\n    getMoveStep = (moveDirection, [row, col]) => {\n        let [rowNew, colNew] = [row, col];\n        switch(moveDirection) {\n            case 'down':\n                rowNew += 1;\n                break;\n            case 'left':\n                colNew -= 1;\n                break;\n            case 'right':\n                colNew += 1;\n                break;\n            default:\n                break;\n        }\n        return [rowNew, colNew];\n    }\n\n    moveFigure = (moveDirection) => {\n        const { onGameOnline } = this.props;\n        const { position: positionCurrent } = this.state;\n        let position = this.getMoveStep(moveDirection, positionCurrent);\n        if(this.hasFigureRightToMove(moveDirection, position)) {\n            this.setState(() => ({\n                position,\n            }));\n        }\n        if(moveDirection === 'down' && !this.hasFigureRightToMove('down', position)) {\n            if(!this.isEndGame()) {\n                this.handleLastStepDown();\n            } else {\n                this.handleEndGame(typeof onGameOnline !== 'undefined');\n            }\n        }\n    }\n\n    isEndGame = () => {\n        const { table } = this.state;\n        let checkedRow = table[ROWS_HIDDEN-1];\n        return checkedRow.find(col => col === 1);\n    }\n\n    handleEndGame = (isActioned) => {\n        if(isActioned) {\n            const { onGameOnline } = this.props;\n            if(onGameOnline) onGameOnline({action: 'handleEndGame'});\n        }\n        clearInterval(this.timer);\n        this.handleResultModalOpen();\n        this.setState(() => ({\n            isGameRunning: false,\n            speed: SPEED,\n        }));\n    }\n\n    handleEndGameOnline = () => {\n        this.handleEndGame(true);\n    }\n\n    handleResultModalOpen = () => {\n        this.setState(() => ({\n            isResultModalOpen: true,\n        }));\n    }\n\n    handleResultModalClose = (action) => {\n        const { onBackToLobby } = this.props;\n        this.setState(() => ({\n            isResultModalOpen: false,\n        }));\n        if(onBackToLobby && action === 'lobby') {\n            onBackToLobby();\n        }\n    }\n\n    handleStartNewGame = (isActioned) => {\n        if(isActioned) {\n            const { onGameOnline } = this.props;\n            if(onGameOnline) onGameOnline({action: 'handleStartNewGame'});\n        }\n        this.setState(() => ({\n            isResultModalOpen: false,\n            table: generateGrid(COLS, ROWS),\n            figure: this.getRandomFigure(),\n            figureNext: this.getRandomFigure(),\n            position: POSITION,\n            rotation: this.getRandomRotation(),\n            rotationNext: this.getRandomRotation(),\n            score: 0,\n            isPause: false,\n            isGameRunning: true,\n            speed: SPEED,\n        }));\n        this.startGame();\n    }\n\n    handleStartNewGameOnline = () => {\n        this.handleStartNewGame(true);\n    }\n\n    // handleStartNewOnlineGame = () => {\n    //     const { onGameReset } = this.props;\n    //     if(onGameReset) {\n    //         this.handleStartNewGame();\n    //         onGameReset();\n    //     }\n    // }\n\n    handleLastStepDown = () => {\n        const { onGameOnline } = this.props;\n        const { figure, rotation, table, position, figureNext, rotationNext, score, speed } = this.state;\n        //const speed = onGameOnline ? this.props.user.speed : this.state.speed;\n        let tableWithFigure = merge(figure[rotation], table, position);\n        let fullRows = this.getAllFullRowsIndexes(tableWithFigure);\n        let scoreNew = score + fullRows.length;\n        let speedNew = speed;\n        if(fullRows.length) {\n            tableWithFigure = this.cleanTableFromFullRows(tableWithFigure, fullRows);\n            speedNew = this.getScoreOptimalSpeed(scoreNew);\n        }\n        this.setState(() => ({\n            table: tableWithFigure,\n            figure: figureNext,\n            figureNext: this.getRandomFigure(),\n            position: POSITION,\n            rotation: rotationNext,\n            rotationNext: this.getRandomRotation(),\n            score: scoreNew,\n            speed: onGameOnline ? speed : speedNew, //TODO: increase speed yourself in single game, but increase speed of ypu opponent oin online game\n        }));\n\n        if(onGameOnline) {\n            onGameOnline({\n                score: scoreNew,\n                speed: speedNew,\n            });\n        }\n\n        this.resetSpeed();\n    }\n\n    getScoreOptimalSpeed = (score) => {\n        const { onGameOnline } = this.props;\n        let speed = this.state.speed;\n        for(let i = 1; i < speed; i++) if(score >= SPEED_RAISE_FOR_SCORE*i && score < SPEED_RAISE_FOR_SCORE*i+SPEED_RAISE_FOR_SCORE && speed !== SPEED-i*SPEED_STEP) {\n            speed -= SPEED_STEP;\n            this.props.enqueueSnackbar(!onGameOnline ? `Speed is now ${speed}ms!` : `You made ${this.props.user.opponent.nickname}'s speed ${speed}ms!`, {\n                variant: 'info',\n                autoHideDuration: 1500,\n            });\n        }\n        return speed;\n    }\n\n    cleanTableFromFullRows = (table, fullRows) => {\n        let cleanRow = Array.from({ length: COLS }, () => 0);\n        let newTable = cloneDeep(table);\n        fullRows.forEach((rowToClean, rowToCleanIndex, arr) => {\n            let top = newTable.slice(0, rowToClean);\n            let bottom = newTable.slice(arr[rowToCleanIndex]+1, newTable.length);\n            newTable = [cleanRow, ...top, ...bottom];\n        })\n        return newTable;\n    }\n\n    getFigureFullGrid = () => {\n        const { figure, rotation, position } = this.state;\n        let rows = figure[rotation].length;\n        let cols = figure[rotation][0].length;\n        let size = rows > cols ? rows : cols;\n        let figureSquare = Array.from({ length: size }, () => Array.from({ length: size }, () => 1));\n        return this.getFigureMap(figureSquare, null, position);\n    }\n\n    handleKeyPress = (e) => {\n        const code = e.code;\n        const { rotation, isPause, isGameRunning } = this.state;\n        if(!isPause || !isGameRunning) {\n            switch(code) {\n                case 'ArrowUp':\n                    this.rotateFigure(this.getPrevRotationPosition);\n                    break;\n                case 'ArrowDown':\n                    this.rotateFigure(this.getNextRotationPosition);\n                    break;\n                case 'ArrowLeft':\n                    if(this.isFigureCloseToLeft(rotation)) {\n                        this.moveFigure('left');\n                    }\n                    break;\n                case 'ArrowRight':\n                    if(this.isFigureCloseToRight(rotation)) {\n                        this.moveFigure('right');\n                    }\n                    break;\n                case 'Space':\n                    this.moveFigure('down');\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    getFigureMap = (figure, moveDirection, position) => {\n        let cleanGrid = generateGrid(COLS, ROWS);\n        return merge(figure, cleanGrid, position);\n    }\n\n    hasTablesConflict = (table1, table2) => {\n        return !table1.find((tableRow, tableRowIndex) => tableRow.find((tableCol, tableColIndex) => tableCol === table2[tableRowIndex][tableColIndex] && tableCol === 1));\n    }\n\n    hasFigureRightToMove = (moveDirection, position) => {\n        const { figure, table, rotation } = this.state;\n        if(!this.isPositionInArea(rotation, position)) return false;\n        let figureMap = this.getFigureMap(figure[rotation], moveDirection, position);\n        return this.hasTablesConflict(table, figureMap);\n    }\n\n    hasFigureRightToRotate = (rotation, position) => {\n        const { table } = this.state;\n        if(!this.isPositionInArea(rotation, position)) return false;\n        //let figureMap = this.getFigureMap(figure[rotation], null, position);\n        let figureMap = this.getFigureFullGrid();\n        return this.hasTablesConflict(table, figureMap);\n    }\n\n    getAllFullRowsIndexes = (table) => {\n        return table.reduce(function(a, row, i) {\n            let isRowFull = row.reduce((a, col) => a + col) === COLS;\n            if(isRowFull) a.push(i);\n            return a;\n        }, []);\n    }\n\n    isPositionInArea = (rotation, [row, col]) => {\n        const { figure } = this.state;\n        let rowLimit = row + figure[rotation].length;\n        let colLimit = col + figure[rotation][0].length;\n        return rowLimit <= ROWS && colLimit <= COLS;\n    }\n\n    // handleResultModal = () => {\n    //     this.setState(() => ({\n    //         isResultModalOpen: !this.state.isResultModalOpen,\n    //     }))\n    // }\n\n    handlePause = (isActioned) => {\n        if(isActioned) {\n            const { onGameOnline } = this.props;\n            if(onGameOnline) onGameOnline({action: 'handlePause'});\n        }\n        this.setState(() => ({\n            isPause: true,\n        }));\n        clearInterval(this.timer);\n    }\n\n    handlePauseOnline = () => {\n        this.handlePause(true);\n    }\n\n    handleContinue = (isActioned) => {\n        if(isActioned) {\n            const { onGameOnline } = this.props;\n            if(onGameOnline) onGameOnline({action: 'handleContinue'});\n        }\n        this.setState(() => ({\n            isPause: false,\n        }));\n        this.startGame();\n    }\n\n    handleContinueOnline = () => {\n        this.handleContinue(true);\n    }\n\n    render() {\n        const { onGameOnline, user } = this.props;\n        const { table, figure, rotation, position, figureNext, rotationNext, score, isPause, isResultModalOpen, isGameRunning } = this.state;\n        let tableWithFigure = figure ? merge(figure[rotation], table, position) : table;\n\n        return (\n            <Fragment>\n                <GridMaterial container justify=\"center\" spacing={5}>\n                    <GridMaterial item>\n                        <Screen\n                            table={tableWithFigure}\n                            onGameOnline={onGameOnline}\n                        />\n                    </GridMaterial>\n                    <GridMaterial item>\n                        {\n                            (isGameRunning || onGameOnline) && (\n                                <Preview\n                                    table={figureNext[rotationNext]}\n                                    onGameOnline={onGameOnline}\n                                />\n                            )\n                        }\n                        <Score\n                            value={score}\n                        />\n                        <List>\n                            {\n                                !isGameRunning && (\n                                    <ListItem>\n                                        <Button color=\"primary\" variant=\"contained\" onClick={isGameRunning ? this.handleStartNewGameOnline : this.handleStartNewGame}>\n                                            Start New Game\n                                        </Button>\n                                    </ListItem>\n                                )\n                            }\n                            {\n                                isGameRunning && !isPause && (\n                                    <ListItem>\n                                        <Button color=\"secondary\" variant=\"contained\" onClick={isGameRunning ? this.handlePauseOnline : this.handlePause}>\n                                            Pause\n                                        </Button>\n                                    </ListItem>\n                                )\n                            }\n                            {\n                                isGameRunning && isPause && (\n                                    <ListItem>\n                                        <Button color=\"secondary\" variant=\"contained\" onClick={isGameRunning ? this.handleContinueOnline : this.handleContinue}>\n                                            Continue\n                                        </Button>\n                                    </ListItem>\n                                )\n                            }\n                            {\n                                isGameRunning && (\n                                    <ListItem>\n                                        <Button color=\"primary\" variant=\"contained\" onClick={isGameRunning ? this.handleEndGameOnline : this.handleEndGame}>\n                                            Stop Game\n                                        </Button>\n                                    </ListItem>\n                                )\n                            }\n                        </List>\n                    </GridMaterial>\n                </GridMaterial>\n                <ResultModal\n                    isOpen={isResultModalOpen}\n                    onClose={this.handleResultModalClose}\n                    user={user}\n                    score={score}\n                />\n            </Fragment>\n        );\n    }\n};\n\nexport default withSnackbar(withStyles(styles)(Body));","import React, { Component } from 'react';\nimport cx from 'classnames';\nimport { isEqual } from 'lodash';\nimport { withStyles } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\n//import {F} from \"../dashboard\";\nimport { ROWS_HIDDEN, COL_SIZE } from './constants';\n\nconst styles = () => ({\n    grid: {\n        position: 'relative',\n    },\n    row: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        justifyContent: 'flex-start',\n        flexWrap: 'nowrap',\n    },\n    col: {\n        width: COL_SIZE,\n        height: COL_SIZE,\n        margin: 0,\n        border: '1px solid lightgrey',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexWrap: 'nowrap',\n        //transition: 'all 0.3s ease 0s',\n    },\n    square: {\n        backgroundColor: 'grey',\n    },\n    hidden: {\n        opacity: 0,\n    },\n});\n\nclass Grid extends Component {\n\n    constructor(props) {\n        super(props);\n        this.memoTable = this.props.table;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return !isEqual(nextProps.table, this.props.table);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { onGameOnline, isPreview } = this.props;\n        if(onGameOnline) {\n            let data = {};\n            if(!isPreview) data.table = this.memoTable;\n            else data.preview = this.memoTable;\n            onGameOnline(data);\n        }\n    }\n\n    render() {\n        const { classes, table, isPreview } = this.props;\n        this.memoTable = table && table.length ? table : this.memoTable;\n        return (\n            <Box\n                className={classes.grid}\n            >\n                {\n                    this.memoTable ? this.memoTable.map((row, rowIndex) => {\n                        return (\n                            <Box\n                                key={rowIndex}\n                                className={cx(classes.row, !isPreview && (rowIndex < ROWS_HIDDEN) && classes.hidden)}\n                            >\n                                {\n                                    row.map((col, colIndex) => {\n                                        return (\n                                            <Box\n                                                key={colIndex}\n                                                className={cx(classes.col, col===1 && classes.square)}\n                                            />\n                                        )\n                                    })\n                                }\n                            </Box>\n                        )\n                    }) : 'no table'\n                }\n            </Box>\n        );\n    }\n};\n\nexport default withStyles(styles)(Grid);","import React, { PureComponent, Fragment } from 'react';\nimport { withStyles } from \"@material-ui/core\";\nimport Box from '@material-ui/core/Box';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst styles = () => ({\n    table: {\n        width: 300,\n    },\n});\n\nclass ResultModal extends PureComponent {\n\n    renderResultSingle = () => {\n        const { classes, score, onClose } = this.props;\n        return (\n            <Fragment>\n                <DialogTitle>\n                    <Table className={classes.table}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Your score is</TableCell>\n                                <TableCell>{score}</TableCell>\n                            </TableRow>\n                        </TableHead>\n                    </Table>\n                </DialogTitle>\n                <DialogActions>\n                    <Button  color=\"primary\" variant=\"contained\" onClick={onClose}>\n                        Close\n                    </Button>\n                </DialogActions>\n            </Fragment>\n        )\n    }\n\n    handleBack = (action) => {\n        const { onClose } = this.props;\n        return () => onClose(action);\n    }\n\n    renderResultOnline = () => {\n        const { classes, score, user: { nickname, opponent: { score: opponentScore, nickname: opponentNickname } } } = this.props;\n        return (\n            <Fragment>\n                <DialogTitle>\n                    <Box>\n                        <Box component=\"h4\">\n                            {\n                                score < opponentScore ? (\n                                    <Fragment>\n                                        You lost!\n                                    </Fragment>\n                                ) : score > opponentScore ? (\n                                    <Fragment>\n                                        You won!\n                                    </Fragment>\n                                ) : (\n                                    <Fragment>\n                                        The friendship won!\n                                    </Fragment>\n                                )\n                            }\n                        </Box>\n                        <Table className={classes.table}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>{nickname}</TableCell>\n                                    <TableCell align=\"right\">{opponentNickname}</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell>{score}</TableCell>\n                                    <TableCell align=\"right\">{opponentScore}</TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </Box>\n                </DialogTitle>\n                <DialogActions>\n                    <Button  color=\"primary\" variant=\"contained\" onClick={this.handleBack('replay')}>\n                        Start new game with {opponentNickname}\n                    </Button>\n                    <Button  color=\"primary\" variant=\"contained\" onClick={this.handleBack('lobby')}>\n                        Back to Lobby\n                    </Button>\n                </DialogActions>\n            </Fragment>\n        )\n    }\n\n    render() {\n        const { user, isOpen, onClose } = this.props;\n        return (\n            <Dialog onClose={onClose} open={isOpen}>\n                {\n                    user ? this.renderResultOnline() : this.renderResultSingle()\n                }\n            </Dialog>\n        );\n    }\n}\n\nexport default withStyles(styles)(ResultModal);","import React, { PureComponent } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { withStyles } from '@material-ui/core';\nimport { withSnackbar } from 'notistack';\nimport { SPEED, SOCKET_SERVER } from './constants';\nimport { Lobby, BodyOnline } from './';\n\nconst SOCKET_FROM           = 'CLIENT';\nconst SOCKET_TO             = 'SERVER';\nconst ON_INIT               = 'INIT';\nconst ON_LOG                = 'LOG';\nconst ON_MESSAGE            = 'MESSAGE';\nconst ON_START              = 'START';\nconst ON_GAME               = 'GAME';\nconst ON_LEAVE_SESSION      = 'LEAVE SESSION';\nconst EMIT_PLAYER_UPDATE    = 'PLAYER UPDATE';\nconst EMIT_HOST_FIND        = 'HOST FIND';\nconst EMIT_GAME             = 'GAME';\nconst EMIT_LEAVE_SESSION    = 'LEAVE SESSION';\n\nconst styles = () => ({\n\n});\n\nclass Multi extends PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.handleStartNewGame = null;\n        this.handlePause = null;\n        this.handleContinue = null;\n        this.handleEndGame = null;\n        this.state = {\n            user: {\n                id: null,\n                nickname: '',\n                speed: SPEED,\n                opponent: {\n                    nickname: '',\n                    table: [],\n                    preview: [],\n                    score: 0,\n                    isFinish: false,\n                },\n            },\n            isLobby: true,\n            connectionType: 'host', //client\n        }\n    }\n\n    componentDidMount() {\n\n        this.socket = socketIOClient(SOCKET_SERVER);\n\n        this.socket.on(SOCKET_FROM, ({ type, ...props }) => {\n            switch(type) {\n                case ON_LOG:\n                    //console.log(props);\n                    break;\n                case ON_INIT:\n                    const { id } = props;\n                    this.setState(state => ({\n                        user: {\n                            ...state.user,\n                            id,\n                        },\n                    }));\n                    break;\n                case ON_MESSAGE:\n                    const { messageType, message } = props;\n                    this.props.enqueueSnackbar(message, {\n                        variant: messageType,\n                        autoHideDuration: 2000,\n                    });\n                    break;\n                case ON_START:\n                    const { opponent } = props;\n                    this.setState(state => ({\n                        isLobby: false,\n                        user: {\n                            ...state.user,\n                            opponent,\n                        },\n                    }));\n                    break;\n                case ON_GAME:\n                    const { action, speed, ...other } = props;\n                    this.setState(state => ({\n                        user: {\n                            ...state.user,\n                            speed,\n                            opponent: {\n                                ...state.user.opponent,\n                                ...other,\n                            }\n                        },\n                    }));\n                    if(action) this[action](false);\n                    break;\n                case ON_LEAVE_SESSION:\n                    let user = {\n                        id: this.state.user.id,\n                        nickname: this.state.user.nickname,\n                    }\n                    this.setState(() => ({\n                        isLobby: true,\n                        user,\n                    }));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n    }\n\n    handleStartNewGameCallback = (func) => {\n        this.handleStartNewGame = func;\n    }\n\n    handlePauseCallback = (func) => {\n        this.handlePause = func;\n    }\n\n    handleContinueCallback = (func) => {\n        this.handleContinue = func;\n    }\n\n    handleEndGameCallback = (func) => {\n        this.handleEndGame = func;\n    }\n\n    handleNicknameChange = (e) => {\n        const { value } = e.target;\n        this.setState(state => ({\n            user: {\n                ...state.user,\n                nickname: value,\n            }\n        }));\n        this.handleUpdatePlayer({\n            nickname: value,\n        })\n    }\n\n    handleConnectionTypeChange = (e) => {\n        const { value } = e.target;\n        this.setState(() => ({\n            connectionType: value,\n        }))\n    }\n\n    handleFindHost = (host) => {\n        const { user: { id } } = this.state;\n        this.socket.emit(SOCKET_TO, {\n            type: EMIT_HOST_FIND,\n            id,\n            host,\n        });\n    }\n\n    handleUpdatePlayer = (params) => {\n        const { user: { id } } = this.state;\n        this.socket.emit(SOCKET_TO, {\n            type: EMIT_PLAYER_UPDATE,\n            id,\n            ...params,\n        });\n    }\n\n    handleGameOnline = (props) => {\n        this.socket.emit(SOCKET_TO, {\n            type: EMIT_GAME,\n            ...props,\n        });\n    }\n\n    handleBackToLobby = () => {\n        this.setState(() => ({\n            isLobby: true,\n        }));\n        this.socket.emit(SOCKET_TO, {\n            type: EMIT_LEAVE_SESSION,\n        });\n    }\n\n    render() {\n        const { isLobby, connectionType, user } = this.state;\n        const { id, nickname } = user;\n        return isLobby ? (\n            <Lobby\n                id={id}\n                connectionType={connectionType}\n                onHostFind={this.handleFindHost}\n                onConnectionTypeChange={this.handleConnectionTypeChange}\n                onNicknameChange={this.handleNicknameChange}\n                nickname={nickname}\n            />\n        ) : (\n            <BodyOnline\n                onGameOnline={this.handleGameOnline}\n                handleStartNewGameCallback={this.handleStartNewGameCallback}\n                handlePauseCallback={this.handlePauseCallback}\n                handleContinueCallback={this.handleContinueCallback}\n                handleEndGameCallback={this.handleEndGameCallback}\n                onBackToLobby={this.handleBackToLobby}\n                user={user}\n            />\n        );\n    }\n\n};\n\n\nexport default withSnackbar(withStyles(styles)(Multi));","import React, { PureComponent } from 'react';\nimport GridMaterial from '@material-ui/core/Grid';\nimport { ROWS, COLS } from './constants';\nimport { Score, Screen, Preview } from './';\nimport { generateGrid } from './etc';\n\nconst DEMO_TABLE = generateGrid(COLS, ROWS);\nconst DEMO_PREVIEW = generateGrid(3, 3);\n\nclass Friend extends PureComponent {\n\n    render() {\n        const { score, table, preview } = this.props;\n        return (\n            <GridMaterial container justify=\"center\" spacing={5}>\n                <GridMaterial item>\n                    <Screen\n                        table={table || DEMO_TABLE}\n                    />\n                </GridMaterial>\n                <GridMaterial item>\n                    <Preview table={preview || DEMO_PREVIEW} />\n                    <Score value={score} />\n                </GridMaterial>\n\n            </GridMaterial>\n        );\n    }\n\n};\n\nexport default Friend;","import React, { PureComponent } from 'react';\nimport { withStyles } from '@material-ui/core';\nimport Box from \"@material-ui/core/Box\";\n\nconst styles = () => ({\n    score: {\n        fontSize: 40,\n    },\n});\n\nclass Score extends PureComponent {\n\n    render() {\n        const { classes, value } = this.props;\n        return (\n            <Box\n                className={classes.score}\n            >\n                Score: {value}\n            </Box>\n        );\n    }\n\n};\n\n\nexport default withStyles(styles)(Score);","import React, { PureComponent } from 'react';\nimport { withStyles } from '@material-ui/core';\nimport Box from \"@material-ui/core/Box\";\nimport { ROWS, COLS, COL_SIZE, ROWS_HIDDEN } from './constants';\nimport {Grid} from \"./index\";\n\nconst styles = () => ({\n    screen: {\n        position: 'relative',\n        width: COL_SIZE*COLS,\n        height: COL_SIZE*(ROWS-ROWS_HIDDEN),\n    },\n    screenInner: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0,\n    },\n});\n\nclass Screen extends PureComponent {\n\n    render() {\n        const { classes, table, ...props } = this.props;\n        return (\n            <Box\n                className={classes.screen}\n            >\n                <Box\n                    className={classes.screenInner}\n                >\n                    <Grid\n                        table={table}\n                        {...props}\n                    />\n                </Box>\n            </Box>\n        );\n    }\n\n};\n\n\nexport default withStyles(styles)(Screen);","import React, { PureComponent } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\nclass Bar extends PureComponent {\n\n    render() {\n        const { gameMode, onGameModeChange } = this.props;\n        return (\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Button\n                        variant=\"contained\"\n                        onClick={() => onGameModeChange('single')}\n                        disabled={gameMode === 'single'}\n                        color=\"secondary\"\n                    >\n                        SinglePlayer\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        onClick={() => onGameModeChange('multi')}\n                        disabled={gameMode === 'multi'}\n                        color=\"secondary\"\n                    >\n                        MultiPlayer\n                    </Button>\n                </Toolbar>\n            </AppBar>\n        );\n    }\n\n};\n\nexport default Bar;","import React, { PureComponent, Fragment } from 'react';\nimport { withStyles } from '@material-ui/core';\nimport Box from \"@material-ui/core/Box\";\nimport TextField from '@material-ui/core/TextField';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst styles = () => ({\n    stepper: {\n        width: 300,\n    },\n    textFindHost: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    listOfClients: {\n\n    },\n    listOfClientsItem: {\n        '&:not(:first-child)': {\n            borderTop: '1px solid grey',\n        }\n    },\n    loader: {\n        display: 'block',\n        margin: '10px auto',\n    },\n});\n\nconst STEPS = ['Your nickname', 'HOST or CLIENT?', ''];\n\nclass Lobby extends PureComponent {\n\n    state = {\n        host: '',\n        activeStep: 0,\n\n    }\n\n    handleFriendIdChange = (e) => {\n        const { value } = e.target;\n        this.setState(() => ({\n            host: value,\n        }))\n    }\n\n    handleBackStep = () => {\n        const { activeStep } = this.state;\n        this.setState(() => ({\n            activeStep: activeStep - 1,\n        }))\n    }\n\n    handleNextStep = () => {\n        const { activeStep } = this.state;\n        if(activeStep === 2) {\n            this.handleFindHost();\n        }\n        if(activeStep < 2) {\n            this.setState(() => ({\n                activeStep: activeStep + 1,\n            }))\n        }\n    }\n\n    handleFindHost = () => {\n        const { onHostFind } = this.props;\n        const { host } = this.state;\n        onHostFind(host);\n    }\n\n    renderStep = (step) => {\n        const { classes, id, nickname, onNicknameChange, connectionType, onConnectionTypeChange } = this.props;\n        const { host } = this.state;\n        switch (step) {\n            case 0:\n                return (\n                    <TextField\n                        label=\"Enter your nickname\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        value={nickname}\n                        onChange={onNicknameChange}\n                    />\n                );\n            case 1:\n                return (\n                    <RadioGroup aria-label=\"position\" name=\"position\" value={connectionType} onChange={onConnectionTypeChange} row>\n                        <FormControlLabel\n                            value=\"host\"\n                            control={<Radio color=\"secondary\" />}\n                            label=\"I want to be HOST\"\n                            labelPlacement=\"end\"\n                        />\n                        <FormControlLabel\n                            value=\"client\"\n                            control={<Radio color=\"secondary\" />}\n                            label=\"I want to be CLIENT\"\n                            labelPlacement=\"end\"\n                        />\n                    </RadioGroup>\n                );\n            case 2:\n                return (\n                    <Fragment>\n                        {\n                            connectionType === 'host' ? (\n                                <Fragment>\n                                    Share your ID with your friend: <br/>\n                                    <strong>{id}</strong> <br/>\n                                </Fragment>\n                            ) : (\n                                <Box className={classes.textFindHost}>\n                                    <TextField\n                                        label=\"Enter HOST's ID:\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        value={host}\n                                        onChange={this.handleFriendIdChange}\n                                    />\n                                </Box>\n                            )\n                        }\n                    </Fragment>\n                );\n            default:\n                break;\n        }\n    }\n\n    setFilledValue = (step) => {\n        const { connectionType, nickname } = this.props;\n        const { activeStep } = this.state;\n        if(activeStep > step && step === 0) return `: ${nickname}`;\n        if(activeStep > step && step === 1) return `: ${connectionType}`;\n    }\n\n\n    render() {\n        const { classes, connectionType } = this.props;\n        const { activeStep } = this.state;\n        return (\n            <Stepper activeStep={activeStep} orientation=\"vertical\" className={classes.stepper}>\n                {\n                    STEPS.map((label, index) => {\n                        return (\n                            <Step key={label}>\n                                <StepLabel>\n                                    {label}\n                                    {this.setFilledValue(index)}\n                                </StepLabel>\n                                <StepContent>\n                                    {this.renderStep(index)}\n                                    <Box>\n                                        {\n                                            activeStep > 0 ? (\n                                                <Button\n                                                    disabled={activeStep === 0}\n                                                    variant=\"contained\"\n                                                    color=\"primary\"\n                                                    onClick={this.handleBackStep}\n                                                    className={classes.button}\n                                                >\n                                                    Back\n                                                </Button>\n                                            ) : null\n                                        }\n                                        {\n                                            !(activeStep === 2 && connectionType === 'host') ? (\n                                                <Button\n                                                    variant=\"contained\"\n                                                    color=\"primary\"\n                                                    onClick={this.handleNextStep}\n                                                    className={classes.button}\n                                                >\n                                                    Next\n                                                </Button>\n                                            ) : null\n                                        }\n                                    </Box>\n                                </StepContent>\n                            </Step>\n                        )\n                    })\n                }\n            </Stepper>\n        )\n\n    }\n\n};\n\n\nexport default withStyles(styles)(Lobby);","import React, { PureComponent } from 'react';\nimport Box from \"@material-ui/core/Box\";\nimport GridMaterial from '@material-ui/core/Grid';\nimport { Body, Friend } from \"./\";\n\nclass BodyOnline extends PureComponent {\n\n    render() {\n        const { user, ...props } = this.props;\n        const { nickname, opponent: { table, score, nickname: opponentNickname, preview } } = user;\n        return (\n            <GridMaterial container>\n                <GridMaterial item xs={6}>\n                    <Box component=\"h2\">{nickname || 'No name'}</Box>\n                    <Body\n                        user={user}\n                        {...props}\n                    />\n                </GridMaterial>\n                <GridMaterial item xs={6}>\n                    <Box component=\"h2\">{opponentNickname || 'No name'}</Box>\n                    <Friend\n                        table={table}\n                        score={score}\n                        preview={preview}\n                    />\n                </GridMaterial>\n            </GridMaterial>\n        )\n    }\n\n};\n\nexport default BodyOnline;","import React, { PureComponent } from 'react';\nimport { withStyles } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport { COL_SIZE } from './constants';\nimport { Grid } from './';\n\nconst styles = () => ({\n    preview: {\n        width: COL_SIZE*4,\n        height: COL_SIZE*4,\n    },\n});\n\nclass Preview extends PureComponent {\n\n    render() {\n        const { classes, ...props } = this.props;\n        return (\n            <Box\n                className={classes.preview}\n            >\n                <Grid\n                    isPreview\n                    {...props}\n                />\n            </Box>\n        );\n    }\n\n};\n\nexport default withStyles(styles)(Preview);","import React from 'react';\nimport { Clock } from '../modules';\n\nexport default () => {\n  return (\n      <Clock />\n  );\n}\n","import React from 'react';\nimport { Dashboard } from '../modules';\n\nexport default () => {\n  return (\n      <Dashboard />\n  );\n}\n","import React from 'react';\nimport { TodoList } from '../modules';\n\nexport default () => {\n  return (\n      <TodoList />\n  );\n}\n","import React from 'react';\nimport { Tetris } from '../modules';\n\nexport default () => {\n  return (\n      <Tetris />\n  );\n}\n","import React from 'react';\nimport { HOME_PAGE } from '../helpers/constants';\n\nimport {\n    About,\n    Test,\n    Clock,\n    Dashboard,\n    TodoList,\n    Tetris,\n} from '../route-pages';\n\nexport const ROUTES = [\n    {\n        link: '/',\n        label: 'Home',\n        page: HOME_PAGE\n    },{\n        link: '/about',\n        label: 'About',\n        page: props => <About {...props} />\n    },{\n        link: '/test',\n        label: 'Test',\n        page: props => <Test {...props} />\n    },{\n        link: '/clock',\n        label: 'Clock',\n        page: props => <Clock {...props} />\n    },{\n        link: '/dashboard',\n        label: 'Dashboard',\n        page: props => <Dashboard {...props} />\n    },{\n        link: '/todo-list',\n        label: 'Todo list',\n        page: props => <TodoList {...props} />\n    },{\n        link: '/tetris',\n        label: 'Tetris',\n        page: props => <Tetris {...props} />\n    }\n];","import React from 'react';\n\nimport {\n    Home,\n    // About,\n    // Test,\n    // Clock,\n    // Dashboard,\n    // TodoList,\n    //Tetris,\n} from '../route-pages';\n\nexport const HOME_PAGE = props => <Home {...props} />;\nexport const IS_SINGLE_PAGE = false;","import React from 'react';\nimport {\n    Route,\n    Link,\n} from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nexport default ({label, to, component}) => {\n    return (\n        <Route\n            path={to}\n            exact={true}\n            children={({match}) => (\n                React.createElement(\n                    component || Button,\n                    {\n                        to,\n                        disabled: Boolean(match),\n                        component: Link,\n                        children: label,\n                    }\n                )\n\n            )}\n        />\n    );\n}\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport { withStyles } from '@material-ui/core';\nimport { RouteLink } from './';\nimport { ROUTES } from '../helpers/routes';\n\nconst StyledButton = withStyles(() => ({\n    root: {\n        width: '100%',\n        color: 'green',\n        '&$disabled': {\n            //backgroundColor: 'rgba(0, 0, 0, 0.87)',\n        },\n    },\n    disabled: {},\n}))(Button);\n\nexport default () => {\n    return (\n        <Box>\n            {\n                ROUTES.map(({link, label}, index) => (\n                    <ListItem key={index}>\n                        <RouteLink to={link} label={label} component={StyledButton} />\n                    </ListItem>\n                ))\n            }\n        </Box>\n    );\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { red, grey, gold, blue, green } from './palette';\n\nconst theme = createMuiTheme({\n    palette: {\n        red,\n        grey,\n        gold,\n        blue,\n        green,\n    },\n});\n\nexport default theme;","/* For use in material-ui/src/styles/colors.js */\nexport const red = {\n    50: '#f5e5e6',\n    100: '#e6bfc1',\n    200: '#d59497',\n    300: '#c4696d',\n    400: '#b8494e',\n    500: '#ab292f',\n    600: '#a4242a',\n    700: '#9a1f23',\n    800: '#91191d',\n    900: '#800f12',\n    A100: '#ffb3b4',\n    A200: '#ff8082',\n    A400: '#ff4d50',\n    A700: '#ff3337',\n    'contrastDefaultColor': 'light',\n};\n\nexport const grey = {\n    50: '#efeff0',\n    100: '#d7d7d9',\n    200: '#bcbdbf',\n    300: '#a1a3a5',\n    400: '#8d8f92',\n    500: '#797b7f',\n    600: '#717377',\n    700: '#66686c',\n    800: '#5c5e62',\n    900: '#494b4f',\n    A100: '#b8cef9',\n    A200: '#89adf5',\n    A400: '#4d88ff',\n    A700: '#3377ff',\n    'contrastDefaultColor': 'light',\n};\n\nexport const gold = {\n    50: '#fff5ea',\n    100: '#ffe7cb',\n    200: '#ffd7a9',\n    300: '#ffc787',\n    400: '#ffbb6d',\n    500: '#ffaf53',\n    600: '#ffa84c',\n    700: '#ff9f42',\n    800: '#ff9639',\n    900: '#ff8629',\n    A100: '#ffffff',\n    A200: '#ffffff',\n    A400: '#ffe7d6',\n    A700: '#ffd8bd',\n    'contrastDefaultColor': 'dark',\n};\n\nexport const blue = {\n    50: '#e6e6e8',\n    100: '#c2c2c6',\n    200: '#9999a0',\n    300: '#70707a',\n    400: '#51515e',\n    500: '#323241',\n    600: '#2d2d3b',\n    700: '#262632',\n    800: '#1f1f2a',\n    900: '#13131c',\n    A100: '#6262ff',\n    A200: '#2f2fff',\n    A400: '#0000fb',\n    A700: '#0000e1',\n    'contrastDefaultColor': 'light',\n};\n\nexport const green = {\n    50: '#e0f0e0',\n    100: '#b3d9b3',\n    200: '#80c080',\n    300: '#4da74d',\n    400: '#269426',\n    500: '#008100',\n    600: '#007900',\n    700: '#006e00',\n    800: '#006400',\n    900: '#005100',\n    A100: '#84ff84',\n    A200: '#51ff51',\n    A400: '#1eff1e',\n    A700: '#04ff04',\n    'contrastDefaultColor': 'light',\n};\n","import React, { Fragment } from 'react';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n} from 'react-router-dom';\nimport { withStyles, MuiThemeProvider } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { ROUTES } from '../helpers/routes';\nimport { MenuMain } from '../components';\nimport theme from '../helpers/theme';\nimport { IS_SINGLE_PAGE } from '../helpers/constants';\n\nconst styles = () => ({\n    mainContainer: {\n        height: '100%',\n    },\n    mainGrid: {\n        height: '100%',\n    },\n    sidebar: {\n        backgroundColor: '#282c34',\n    },\n    work: {\n        position: 'relative',\n        backgroundColor: '#fff',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n});\n\nexport default withStyles(styles)(({classes, ...props}) => {\n    //console.log(props);\n    return (\n        <Fragment>\n            <MuiThemeProvider\n                theme={theme}\n            >\n                <CssBaseline />\n                <Router>\n                    <Container\n                        className={classes.mainContainer}\n                    >\n                        <Grid\n                            container\n                            spacing={4}\n                            className={classes.mainGrid}\n                        >\n                            {\n                                !IS_SINGLE_PAGE && (\n                                    <Grid\n                                        item xs={2}\n                                        className={classes.sidebar}\n                                    >\n                                        <MenuMain />\n                                    </Grid>\n                                )\n                            }\n                            <Grid\n                                item xs={!IS_SINGLE_PAGE ? 10 : 12}\n                                className={classes.work}\n                            >\n                                <Switch>\n                                {\n                                    ROUTES.map(({link, label, page}, index) => (\n                                        <Route key={index} exact path={link} component={page} />\n                                    ))\n                                }\n                                </Switch>\n                            </Grid>\n\n\n\n                        </Grid>\n                    </Container>\n                </Router>\n            </MuiThemeProvider>\n        </Fragment>\n    );\n});\n","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Route,\n} from 'react-router-dom';\nimport { Main } from './containers';\n\nfunction App() {\n  return (\n    <Router>\n        <Route component={Main} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}